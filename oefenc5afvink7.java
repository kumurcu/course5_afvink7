/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package oefenc5afvink7;


import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import java.awt.Color;
import java.awt.Graphics;
//import oefenc5afvink7.Translator.NotAnAA;


public class oefenc5afvink7 extends javax.swing.JFrame {

    /**
     * Creates new form Owe5a_vink7
     */
    public oefenc5afvink7() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        LabelBestand = new javax.swing.JLabel();
        LabelInformatie = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Textveld = new javax.swing.JTextArea();
        OpenBest = new javax.swing.JButton();
        Input = new javax.swing.JTextField();
        Visualiseer = new javax.swing.JButton();
        VisualisatieBalk = new javax.swing.JPanel();
        LabelVisualisatie = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        LabelBestand.setText("Bestand");

        LabelInformatie.setText("Informatie");

        Textveld.setColumns(20);
        Textveld.setRows(5);
        jScrollPane1.setViewportView(Textveld);

        OpenBest.setText("Open bestand");
        OpenBest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OpenBestActionPerformed(evt);
            }
        });

        Visualiseer.setText("Visualiseer");
        Visualiseer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                VisualiseerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout VisualisatieBalkLayout = new javax.swing.GroupLayout(VisualisatieBalk);
        VisualisatieBalk.setLayout(VisualisatieBalkLayout);
        VisualisatieBalkLayout.setHorizontalGroup(
            VisualisatieBalkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        VisualisatieBalkLayout.setVerticalGroup(
            VisualisatieBalkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 165, Short.MAX_VALUE)
        );

        LabelVisualisatie.setText("Visualisatie");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelInformatie)
                    .addComponent(LabelBestand)
                    .addComponent(LabelVisualisatie))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Input, javax.swing.GroupLayout.DEFAULT_SIZE, 331, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(OpenBest)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Visualiseer)
                        .addGap(7, 7, 7))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(VisualisatieBalk, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(LabelBestand)
                    .addComponent(OpenBest)
                    .addComponent(Input, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Visualiseer))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelInformatie)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(VisualisatieBalk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(LabelVisualisatie))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>                        

    private void OpenBestActionPerformed(java.awt.event.ActionEvent evt) {                                         
        // TODO add your handling code here:
        JFileChooser chooser = new JFileChooser();
        // optionally set chooser options ...
        if (chooser.showOpenDialog(this) == JFileChooser.APPROVE_OPTION) {
            File f = chooser.getSelectedFile();
            
            String content = null;            
            FileReader reader = null;
            try {
                reader = new FileReader(f);
                char[] chars = new char[(int) f.length()];
                reader.read(chars);
                content = new String(chars);
                reader.close();
            } catch (IOException e) {
                e.printStackTrace();
            } finally {
                if(reader !=null){try {
                    reader.close();
                    } catch (IOException ex) {
                        Logger.getLogger(oefenc5afvink7.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
            String best = f.toString();
            Input.setText(best);
            
            finalSequentie = content.toUpperCase().replace(" ", "").replace("\n", ""); 
            
            finalTAA = controleAA(finalSequentie); 
            
        }
    }                                        
    
    /**
     *
     * @param finalTAA
     * @param finalSequentie
     */
    public void drawBar(int finalTAA, String finalSequentie){
        final String[] hydrofoob = {"V","I","L","F","W","Y","M"};
        final String[] hydrofiel = {"S","T","H","N","Q","E","D","K","R"};
        final String[] neutraal = {"C","A","G","P"};
        
        String seq2 = finalSequentie;
            
        String str = seq2;            
        int Count = 0;

        Graphics paper = VisualisatieBalk.getGraphics();
        paper.clearRect(0, 0, 600, 50);
        paper.drawString(Integer.toString(Count), 0, 60);            
        
        int widthPart = Math.round((float)550/(float)seq2.length());
        
        // iterate over the array using the for-each loop.       
        for(int i = 0, n = str.length() ; i < n ; i++) { 
            
            char c = str.charAt(i);
            
            if (c == 'V' || c == 'I' || c == 'L' || c == 'F' || c == 'W' || c == 'Y' || c == 'M'){

                paper.setColor(Color.BLUE);        
                paper.fillRect(Math.round(Count*widthPart), 0, widthPart, 50);
                
                Count++;                    
            }

            if (c == 'S' || c == 'T' || c == 'H' || c == 'N' || c == 'Q' || c == 'E' || c == 'D' || c == 'K' || c == 'R'){
                paper.setColor(Color.RED);        
                paper.fillRect(Math.round(Count*widthPart), 0, widthPart, 50);

                Count++;                    
            }

            if (c == 'C' || c == 'A' || c == 'G' || c == 'P'){
                paper.setColor(Color.GREEN);        
                paper.fillRect(Math.round(Count*widthPart), 0, widthPart, 50);

                Count++;                    
            }
        }
        
        paper.setColor(Color.BLACK);
        paper.drawString(Integer.toString(Count), Math.round((550)), 60);

        //Legande maken
        paper.setColor(Color.BLUE);
        paper.fillRect(0, 80, 25, 25);
        paper.setColor(Color.BLACK);
        paper.drawString("Hydrofoob", 30, 103);

        paper.setColor(Color.RED);
        paper.fillRect(0, 110, 25, 25);
        paper.setColor(Color.BLACK);
        paper.drawString("Hydrofiel", 30, 133);

        paper.setColor(Color.GREEN);
        paper.fillRect(0, 140, 25, 25);
        paper.setColor(Color.BLACK);
        paper.drawString("Neutraal", 30, 163);
        
    }   
  
    
    private void VisualiseerActionPerformed(java.awt.event.ActionEvent evt) {                                            
        // TODO add your handling code here:
       drawBar(finalTAA, finalSequentie);
    }                                           

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Owe5a_vink7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Owe5a_vink7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Owe5a_vink7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Owe5a_vink7.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new oefenc5afvink7().setVisible(true);
            }
        });
    }
    
    private int controleAA(String sequentie) {
            StringBuilder Totaal = new StringBuilder(); 
            int TotaalAA = 0;
            for (int i = 0; i < sequentie.length(); i++) {
                Totaal.append(Translator.controle(Character.toString(sequentie.toCharArray()[i])));
                TotaalAA++;
            }
           
            if (Totaal.toString().contains("Dit is een niet geldige aminozuur:")){
                Textveld.append(Totaal.toString());                               
            } else{
                Textveld.append("Alle aminozuren zijn correct");
            }
        return TotaalAA;
    }
    
    
        
    private String finalSequentie;
    private int finalTAA;
    
  

    // Variables declaration - do not modify                     
    private javax.swing.JTextField Input;
    private javax.swing.JLabel LabelBestand;
    private javax.swing.JLabel LabelInformatie;
    private javax.swing.JLabel LabelVisualisatie;
    private javax.swing.JButton OpenBest;
    private javax.swing.JTextArea Textveld;
    private javax.swing.JPanel VisualisatieBalk;
    private javax.swing.JButton Visualiseer;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration                   

    private static class NotAnAA {

        public NotAnAA() {
        }
    }
}

